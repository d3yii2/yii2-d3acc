<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3acc\models\base;

use Yii;
use d3acc\models\AcAccount;
use d3acc\models\AcPeriodBalance;
use d3acc\models\AcRecRef;
use d3acc\models\AcTran;
use yii\db\ActiveQuery;
use yii\db\ActiveRecord;

/**
 * This is the base-model class for table "ac_rec_acc".
 *
 * @property integer $id
 * @property integer $sys_company_id
 * @property integer $account_id
 * @property string $label
 *
 * @property AcPeriodBalance[] $acPeriodBalances
 * @property AcRecRef[] $acRecRefs
 * @property AcTran[] $acTrans
 * @property AcTran[] $acTrans0
 * @property AcAccount $account
 * @property string $aliasModel
 */
abstract class AcRecAcc extends ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'ac_rec_acc';
    }

    /**
     * @inheritdoc
     */
    public function rules(): array
    {
        return [
            'required' => [['account_id'], 'required'],
            'smallint Unsigned' => [['sys_company_id','account_id'],'integer' ,'min' => 0 ,'max' => 65535],
            'integer Unsigned' => [['id'],'integer' ,'min' => 0 ,'max' => 4294967295],
            [['label'], 'string', 'max' => 100],
            [['account_id'], 'exist', 'skipOnError' => true, 'targetClass' => AcAccount::class, 'targetAttribute' => ['account_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels(): array
    {
        return [
            'id' => Yii::t('d3acc', 'ID'),
            'sys_company_id' => Yii::t('d3acc', 'Sys Company ID'),
            'account_id' => Yii::t('d3acc', 'Account'),
            'label' => Yii::t('d3acc', 'Label'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints(): array
    {
        return array_merge(parent::attributeHints(), [
            'account_id' => Yii::t('d3acc', 'Account'),
            'label' => Yii::t('d3acc', 'Label'),
        ]);
    }

    /**
     * @return ActiveQuery
     */
    public function getAcPeriodBalances(): ActiveQuery
    {
        return $this
            ->hasMany(AcPeriodBalance::class, ['rec_acc_id' => 'id'])
            ->inverseOf('recAcc');
    }

    /**
     * @return ActiveQuery
     */
    public function getAcRecRefs(): ActiveQuery
    {
        return $this
            ->hasMany(AcRecRef::class, ['rec_account_id' => 'id'])
            ->inverseOf('recAccount');
    }

    /**
     * @return ActiveQuery
     */
    public function getAcTrans(): ActiveQuery
    {
        return $this
            ->hasMany(AcTran::class, ['credit_rec_acc_id' => 'id'])
            ->inverseOf('creditRecAcc');
    }

    /**
     * @return ActiveQuery
     */
    public function getAcTrans0(): ActiveQuery
    {
        return $this
            ->hasMany(AcTran::class, ['debit_rec_acc_id' => 'id'])
            ->inverseOf('debitRecAcc');
    }

    /**
     * @return ActiveQuery
     */
    public function getAccount(): ActiveQuery
    {
        return $this
            ->hasOne(AcAccount::class, ['id' => 'account_id'])
            ->inverseOf('acRecAccs');
    }
}
